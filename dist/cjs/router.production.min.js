/** @license url-pattern-parser.js v0.0.1 Released under the MIT License. */
"use strict";exports.Router=class{#t;constructor(){this.#t=Object.create(null),this.#t.ALL=[]}add(t,e,...s){const r={pattern:function(t){const e=[];return{keys:e,pattern:new RegExp(`${("/"===t[0]?t.slice(1):t).split("/").reduce(((t,s)=>{if("*"===s)t+="/(?:.*)";else if(":"===s[0]){const r="?"===s[s.length-1];t+=r?"(?:/([^/]+?))?":"/([^/]+?)",e.push(s.slice(1,r?s.length-1:s.length))}else t+=`/${function(t){return t.replace(/[\\\*\+\.\?\{\}\(\)\[\]\^\$\-\|\/]/g,"\\$&")}(s)}`;return t}))}/?$`,"i")}}(e),handlers:s};if("ALL"===t){const t=Object.keys(this.#t);for(let e=0;e<t.length;++e)this.#t[t[e]].push(r)}else void 0===this.#t[t]&&(this.#t[t]=this.#t.ALL.slice()),this.#t[t].push(r)}match(t,e){const s=[],r=Object.create(null),n=this.#t[t]??this.#t.ALL;for(let t=0;t<n.length;++t){const{pattern:{pattern:l,keys:u},handlers:o}=n[t];if(l.test(e)){s.push(...o);const t=l.exec(e);if(null!==t)for(let e=0;e<u.length;++e)r[u[e]]=t[e+1]}}return 0!==s.length?{handlers:s,params:r}:null}};
